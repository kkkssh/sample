##day02

###A03DataTest
###A04DataExam
        - 초기값을 저장하여 변수 선언
        - 실수와 정수의 곱셈
        - 정수 형식으로 강제 캐스팅
###A05VariableExam
        - 초기값 없이 변수 선언
        - 2개의 정수 나눗셈
        - 실수 형식 결과값을 위한 캐스팅

###요약        
<데이터 형식에 따른 변수 선언>
선언이란? 변수가 저장할 데이터의 형식과 이름을 정하는 것.
선언 방법 1) int age = 26;     //선언과 초기값 저장
선언 방법 2) 
          int age;          //초기값 없음
          System.out.println("나이 :" + age);   //문법 오류(컴파일 오류)
          :
          age = 26;         //필요할 때 값 저장
          
          int age;
          age = 26;
          System.out.println("나이 :" + age);   //이렇게 해야 맞다
          
<비트와 바이트>
- 메모리에 데이터를 저장할 때 모든 값은 0과 1로만 한다.(2진법, binary)
- 정수, 실수, 문자열, 문자와 같은 데이터가 모두 2진법으로 변환된다.
- 비트는 0 또는 1을 표시하는 한 자리
- 바이트는 8비트가 모여서 1바이트를 만든다.
- 1024바이트가 모이면 1KB(kilo byte)
- 1024KB는 1MB, 1024MB는 1GB(기가), 1024GB는 1TB(테라), 1024TB는 1PB(페타바이트)
- 원시형 데이터 타입은 각각 다른 메모리 바이트를 할당 받게 된다.

<데이터의 기본 형식과 크기>
- 정수는 byte(1바이트) < short(2바이트) < *int(4바이트) < long(8바이트)
- 실수는 float(4바이트) < *double(8바이트)
- 문자형 char(2바이트), 논리형 boolean(1바이트)
- 정수 8바이트 long과 실수 8바이트 double은 메모리 크기는 같지만 표현형식이 다르다.
  double 형식이 훨씬 매우 큰 범위의 값을 표현한다.
  
 <더하기/빼기/곱하기/나누기 연산>
 정수와 정수의 연산 결과는 정수
 실수가 1개라도 있으면 결과는 실수
 연산결과의 데이터 형식과 저장하는 변수의 형식이 동일해야 한다.
 단, 아래와 같은 자동 캐스팅의 경우는 오류없이 실행됩니다.
  
 <캐스팅 casting : 데이터 형식 변환을 말한다.>
 자동 캐스팅 : 자동으로 데이터 형식이 변환된다.
            예) int 값을 double 변수로 저장할 때 double weight = 57; (O)
            반대로 double 값을 int 변수로 저장하는 것은 오류
            예) int age = 34.2;  (X)
            
 강제 캐스팅 : 직접적인 명령으로 데이터 형식이 변환된다.
            int age = 34.2; 와 같은 데이터 변환을 강제로 한다. 이런 경우 데이터가 손실될 수 있다.
 
 
 
 
 